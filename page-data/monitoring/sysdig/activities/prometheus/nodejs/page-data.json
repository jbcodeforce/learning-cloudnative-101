{"componentChunkName":"component---src-pages-monitoring-sysdig-activities-prometheus-nodejs-mdx","path":"/monitoring/sysdig/activities/prometheus/nodejs/","result":{"pageContext":{"frontmatter":{"title":"Integrate Prometheus Node.js Metrics","description":"Lab to show how to work with prometheus metrics"},"relativePagePath":"/monitoring/sysdig/activities/prometheus/nodejs.mdx","titleType":"page","MdxNode":{"id":"6f1d78e9-d91c-52cb-8f8b-434266337002","children":[],"parent":"d27b634d-7d3e-5a32-a7ab-cf52cda28e48","internal":{"content":"---\ntitle: Integrate Prometheus Node.js Metrics\ndescription: Lab to show how to work with prometheus metrics\n---\n\n\n### Prerequisite\n\n- Configure the Sysdig Agent on a kubernetes cluster, you can use one of the labs in this bootcamp located [here](/monitoring/sysdig/#activities)\n\n\n### Deploy nodejs application enable with prometheus\n\n- Review the instrumented nodejs application [app.js](https://github.com/ibm-cloud-architecture/learning-cloudnative-101/blob/master/static/custom-metrics-examples/prometheus/javascript/app.js)\n\n- Creagte a namespace to deploy the application\n```shell\nkubectl create ns dev\n```\n- Deploy the following nodejs application\n```shell\ncat <<EOF | kubectl -n dev apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: prometheus-nodejs-app\nspec:\n  selector:\n    matchLabels:\n      app: prometheus-nodejs-app\n  template:\n    metadata:\n      labels:\n        app: prometheus-nodejs-app\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/path: \"/metrics\"\n        prometheus.io/port: \"8080\"\n    spec:\n      containers:\n        - name: prometheus-nodejs-app\n          image: docker.io/ibmcase/prometheus-nodejs\nEOF\n```\n- Expose nodejs application service\n```shell\nkubectl -n dev create svc nodeport prometheus-nodejs-app --tcp 8080:8080\n```\n\n- Deploy the following nodej.js application\n\n\n### Test the application\n- Expose application web service on local port 9080\n```shell\nkubectl -n dev port-forward service/prometheus-nodejs-app 9080:8080\n```\n\n- Send http request to the web service\n```shell\nwhile true; do sleep 1; curl http://localhost:9080 -si | head -1 ; done\n```\nOutput looks like this\n```\nHTTP/1.1 200 OK\n```\n\n- Query prometheus endpoint\n```shell\ncurl http://localhost:9080/metrics\n```\nOutput looks like this\n```\n# HELP node_process_cpu_user_seconds_total Total user CPU time spent in seconds.\n# TYPE node_process_cpu_user_seconds_total counter\nnode_process_cpu_user_seconds_total 0.2760000000000001 1591157428088\n```\n\n## nodejs Prometheus Metrics in Sysdig\n- Open Sysdig\n- Select Explore\n- Select Deployments\n- Select `dev` namespace\n- Select deployment `prometheus-nodejs-app`\n- Select metrics collected start with `jvm_` or `nodejs_` for example `node_nodejs_heap_space_size_used_bytes`\n\n![nodejs-metrics](./images/nodejs_heap_bytes.png)\n\n## References\n\n- Sysdig Blog Prometheus metrics / OpenMetrics code instrumentation (https://sysdig.com/blog/prometheus-metrics/)\n","type":"Mdx","contentDigest":"64f952cb7304e7a0c726db0623a218c5","counter":391,"owner":"gatsby-plugin-mdx"},"frontmatter":{"title":"Integrate Prometheus Node.js Metrics","description":"Lab to show how to work with prometheus metrics"},"exports":{},"rawBody":"---\ntitle: Integrate Prometheus Node.js Metrics\ndescription: Lab to show how to work with prometheus metrics\n---\n\n\n### Prerequisite\n\n- Configure the Sysdig Agent on a kubernetes cluster, you can use one of the labs in this bootcamp located [here](/monitoring/sysdig/#activities)\n\n\n### Deploy nodejs application enable with prometheus\n\n- Review the instrumented nodejs application [app.js](https://github.com/ibm-cloud-architecture/learning-cloudnative-101/blob/master/static/custom-metrics-examples/prometheus/javascript/app.js)\n\n- Creagte a namespace to deploy the application\n```shell\nkubectl create ns dev\n```\n- Deploy the following nodejs application\n```shell\ncat <<EOF | kubectl -n dev apply -f -\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: prometheus-nodejs-app\nspec:\n  selector:\n    matchLabels:\n      app: prometheus-nodejs-app\n  template:\n    metadata:\n      labels:\n        app: prometheus-nodejs-app\n      annotations:\n        prometheus.io/scrape: \"true\"\n        prometheus.io/path: \"/metrics\"\n        prometheus.io/port: \"8080\"\n    spec:\n      containers:\n        - name: prometheus-nodejs-app\n          image: docker.io/ibmcase/prometheus-nodejs\nEOF\n```\n- Expose nodejs application service\n```shell\nkubectl -n dev create svc nodeport prometheus-nodejs-app --tcp 8080:8080\n```\n\n- Deploy the following nodej.js application\n\n\n### Test the application\n- Expose application web service on local port 9080\n```shell\nkubectl -n dev port-forward service/prometheus-nodejs-app 9080:8080\n```\n\n- Send http request to the web service\n```shell\nwhile true; do sleep 1; curl http://localhost:9080 -si | head -1 ; done\n```\nOutput looks like this\n```\nHTTP/1.1 200 OK\n```\n\n- Query prometheus endpoint\n```shell\ncurl http://localhost:9080/metrics\n```\nOutput looks like this\n```\n# HELP node_process_cpu_user_seconds_total Total user CPU time spent in seconds.\n# TYPE node_process_cpu_user_seconds_total counter\nnode_process_cpu_user_seconds_total 0.2760000000000001 1591157428088\n```\n\n## nodejs Prometheus Metrics in Sysdig\n- Open Sysdig\n- Select Explore\n- Select Deployments\n- Select `dev` namespace\n- Select deployment `prometheus-nodejs-app`\n- Select metrics collected start with `jvm_` or `nodejs_` for example `node_nodejs_heap_space_size_used_bytes`\n\n![nodejs-metrics](./images/nodejs_heap_bytes.png)\n\n## References\n\n- Sysdig Blog Prometheus metrics / OpenMetrics code instrumentation (https://sysdig.com/blog/prometheus-metrics/)\n","fileAbsolutePath":"/home/travis/build/ibm-cloud-architecture/learning-cloudnative-101/src/pages/monitoring/sysdig/activities/prometheus/nodejs.mdx"}}}}